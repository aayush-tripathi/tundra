name: Build & Publish tundra-cli

permissions:
  contents: write

on:
  release:
    types: [created, published, prereleased]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable

    - name: Build tundra-cli
      run: cargo build --release -p tundra-cli

    - name: Package for Linux
      if: runner.os == 'Linux'
      id: package
      run: |
        cd target/release
        tar czvf tundra-cli-${{ github.event.release.tag_name }}-linux-x86_64.tar.gz tundra-cli
        echo "path=target/release/tundra-cli-${{ github.event.release.tag_name }}-linux-x86_64.tar.gz" >> $GITHUB_OUTPUT

    - name: Package for Windows
      if: runner.os == 'Windows'
      id: package
      shell: pwsh
      run: |
        # compress the .exe into a zip
        Compress-Archive -Path target\release\tundra-cli.exe `
                         -DestinationPath target\release\tundra-cli-${{ github.event.release.tag_name }}-windows-x86_64.zip
        # record the zipâ€™s path for the next step
        Add-Content -Path $env:GITHUB_OUTPUT `
                    -Value "path=target/release/tundra-cli-${{ github.event.release.tag_name }}-windows-x86_64.zip"

    - name: Upload asset to release
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.package.outputs.path }}
