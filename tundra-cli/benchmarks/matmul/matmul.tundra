fun bench_matmul(n):
    # 1) Build A and B
    # Allocate A as an array of arrays
    var A = Array(n)
    var i = 0
    while (i < n):
        A[i] = Array(n)
        var j = 0
        while (j < n):
            A[i][j] = i * n + j        # fill with some pattern
            j = j + 1
        i = i + 1

    var B = Array(n)
    i = 0
    while (i < n):
        B[i] = Array(n)
        var j = 0
        while (j < n):
            B[i][j] = j * n + i        # a different pattern
            j = j + 1
        i = i + 1

    # 2) Allocate C = zero matrix
    var C = Array(n)
    i = 0
    while (i < n):
        C[i] = Array(n)
        var j = 0
        while (j < n):
            C[i][j] = 0
            j = j + 1
        i = i + 1

    # 3) Compute C = A Ã— B
    i = 0
    while (i < n):
        var j = 0
        while (j < n):
            var k = 0
            while (k < n):
                # C[i][j] = C[i][j] + A[i][k] * B[k][j]
                C[i][j] = C[i][j] + (A[i][k] * B[k][j])
                k = k + 1
            j = j + 1
        i = i + 1

    # 4) Print one entry so that the compiler/JIT cannot skip the loops
    print(C[0][0])
    return C[0][0]


fun main():
    var n = 200

    bench_matmul(n)
# Call main
main()
